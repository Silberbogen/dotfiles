;-*-lisp-*-
; mit loadrc im colon neu laden
(in-package :stumpwm)

(load "devel/git/stumpwm/contrib/sbclfix")
(load "devel/git/stumpwm/contrib/net")
(load "devel/git/stumpwm/contrib/cpu")
(load "devel/git/stumpwm/contrib/mem")

;;; Verworfene Lösungen
;(run-shell-command "xmodmap -e 'clear Mod4'" t)
;(run-shell-command "xmodmap -e 'keycode 133 = F20'" t)
;(set-prefix-key (kbd "F20"))
;(run-shell-command "xmodmap -e 'keycode 135 = Hyper_L'" t)
;(run-shell-command "xmodmap -e 'clear mod5'" t)
;(run-shell-command "xmodmap -e 'add mod5 = Hyper_L'" t)
;(set-prefix-key (kbd "C-y"))
;(set-prefix-key (kbd "C-<"))
;(set-prefix-key (kbd "F20"))
;(set-prefix-key (kbd "Super_L"))

;; Statt C-t, ist doch die wirklich unbenützte Menütaste einfach nur am geilsten!?
(set-prefix-key (kbd "Menu"))

;; Zeichensatz - der Standardfont:
;;(set-font "-*-terminus-*-*-*-*-*-*-*-*-*-*-*-*")
(set-font "-*-profont-*-*-*-*-12-*-*-*-*-*-*-*")

;; Farben
(set-focus-color      "lightblue")
(set-unfocus-color    "black")
(set-win-bg-color     "darkblue")
(set-fg-color         "lightblue")
(set-bg-color         "darkblue")

(defcommand claws-mail () ()
  "Starte/wechsle zu Claws-Mail."
  (run-or-raise "claws-mail" '(:class "Claws-mail")))

(defcommand chromium () ()
  "Starte/wechsle zum Chromium Webbrowser."
  (run-or-raise "chromium" '(:class "Conkeror")))	    

(defcommand conkeror () ()
  "Starte/wechsle zum Conkeror Webbrowser."
  (run-or-raise "conkeror" '(:class "Conkeror")))

(defcommand deluge () ()
  "Starte/wechsle zu Deluge."
  (run-or-raise "deluge" '(:class "Deluge")))

(defcommand emacs () ()
  "Starte/wechsle zu Emacs."
  (run-or-raise "emacs" '(:class "Emacs")))

(defcommand flare () ()
  "Starte/wechsle zu Flare RPG."
  (run-or-raise "flare" '(:class "flare.bin(defcommand emacs () ()
  "Starte/wechsle zu Emacs."
  (run-or-raise "emacs" '(:class "Emacs")))")))

(defcommand firefox () ()
  "Starte/wechsle zu Firefox."
  (run-or-raise "firefox" '(:class "Firefox")))

(defcommand focuswriter () ()
  "Starte/wechsle zu Focuswriter."
  (run-or-raise "focuswriter" '(:class "Focuswriter")))

(defcommand gvim () ()
  "Starte/wechsle zu gVim."
  (run-or-raise "gvim" '(:class "Gvim")))

(defcommand gimp () ()
  "Starte/wechsle zu GIMP."
  (run-or-raise "gimp" '(:class "Gimp")))

(defcommand kaffeine () ()
  "Starte/wechsle zu Kaffeine."
  (run-or-raise "kaffeine" '(:class "Kaffeine")))

(defcommand keepassx () ()
  "Starte/wechsle zu KeePassX."
  (run-or-raise "keepassx" '(:class "Keepassx")))

(defcommand minitube () ()
  "Starte/wechsle zu Minitube."
  (run-or-raise "minitube" '(:class "Minitube")))

(defcommand nitrogen () ()
  "Starte/wechsle zu Nitrogen."
  (run-or-raise "nitrogen" '(:class "Nitrogen")))

(defcommand okular () ()
  "Starte/wechsle zum Okular PDF-Betrachter."
  (run-or-raise "okular" '(:class "Okular")))

(defcommand palapeli () ()
  "Starte/wechsle zu Palapeli."
  (run-or-raise "palapeli" '(:class "Palapeli")))

(defcommand reinit () ()
  "Reinitialisierung des Systems"
  (run-commands "reload" "loadrc"))

(defcommand ristretto () ()
  "Starte/wechsle zu Ristretto."
  (run-or-raise "ristretto" '(:class "Ristretto")))

(defcommand scid () ()
  "Starte/wechsle zu Scid vs. PC."
  (run-or-raise "scid" '(:class "Scid")))

(defcommand surf () ()
  "Starte/wechsle zu Surf."
  (run-or-raise "surf" '(:class "surf")))

(defcommand switch-modeline () ()
  "Schaltet die Modeline ein oder aus"
  (toggle-mode-line (current-screen) (current-head)))

(defcommand turpial () ()
  "Starte/wechsle zu Turpial."
  (run-or-raise "turpial" '(:class "Turpial")))

(defcommand uzbl-browser () ()
  "Starte/wechsle zu Uzbl."
  (run-or-raise "uzbl-browser" '(:class "Uzbl-core")))

(defcommand unison-gtk2 () ()
  "Starte/wechsle zu Unison."
  (run-or-raise "unison-gtk2" '(:class "Unison-gtk2")))

(defcommand vlc () ()
  "Starte/wechsle zu VideoLanClient."
  (run-or-raise "vlc" '(:class "Vlc")))

(defcommand xchat () ()
  "Starte/wechsle zu X-Chat."
  (run-or-raise "xchat" '(:class "Xchat")))

(defcommand zathura () ()
  "Starte/wechsle zu Zathura."
  (run-or-raise "zathura" '(:class "Zathura")))

;; Bewege den Focus und anschließend die Maus in das Fenster
(defcommand move-focus-warp (dir) ((:direction "Direction:"))
(move-focus-and-or-window dir)
(banish-pointer :window))

;; Such- und Auswahl-Befehle
;; -------------------------

(defcommand duckduckgo (search)
  ((:string "Suche in DuckDuckGo nach: "))
  "Dient zur Suche bei DuckDuckGo per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://duckduckgo.com/?q=" search)))

(defcommand dwarffortress (search)
  ((:string "Suche im Dwarf Fortress Wiki nach: "))
  "Dient zur Suche im Dwarf Fortress Wiki per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://df.magmawiki.com/index.php?title=Special%3ASearch&search=" search)))

(defcommand google (search)
  ((:string "Suche in Google nach: "))
  "Dient zur Suche bei Google per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.google.de/search?q=" search)))

(defcommand hackernews (search)
  ((:string "Suche bei Hackernews nach: "))
  "Dient zur Suche bei Hackernews per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.google.com/search?q=site:news.ycombinator.com+" search)))

(defcommand imdb (search)
  ((:string "Suche in der IMDB nach: "))
  "Dient zur Suche bei IMDB per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec imdb http://imdb.com/find?q=" search)))

(defcommand ixquick (search)
  ((:string "Suche in IxQuick nach: "))
  "Dient zur Suche bei IxQuick per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://ixquick.com/do/metasearch.pl?query=" search)))

(defcommand leo (search)
  ((:string "Suche im LEO Wörterbuch nach: "))
  "Dient zur Suche bei LEO per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://pda.leo.org/?lp=ende&lang=de&searchLoc=0&cmpType=relaxed&relink=on&sectHdr=off&spellToler=std&search=" search)))

(defcommand memory-alpha (search)
  ((:string "Suche in Memory-Alpha nach: "))
  "Dient zur Suche in der Memory-Alpha per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://memory-alpha.org/en/wiki/Special:Search/?search=" search)))

(defcommand minecraft (search)
  ((:string "Suche im Minecraft Wiki nach: "))
  "Dient zur Suche im Minecraft Wiki per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.minecraftwiki.net/index.php?title=Special%3ASearch&search=" search)))

(defcommand nachrichten (search)
  ((:string "Suche in Google News nach: "))
  "Dient zur Suche bei Google News per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://news.google.com/news/search?q=" search)))

(defcommand news-bbc (search)
  ((:string "Suche bei BBC News nach: "))
  "Dient zur Suche bei BBC News per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.bbc.co.uk/search/news/?q=" search)))

(defcommand news-guardian (search)
  ((:string "Suche bei Guardian News nach: "))
  "Dient zur Suche bei Guardian News per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.guardian.co.uk/search?q=" search)))

(defcommand news-register (search)
  ((:string "Suche bei The Register nach: "))
  "Dient zur Suche bei The Register per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://search.theregister.co.uk/?q=" search)))

(defcommand revo (search)
  ((:string "Suche in Revo nach: "))
  "Dient zur Suche bei Revo per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://reta-vortaro.de/cgi-bin/sercxu.pl?cx=1&sercxata=" search)))

(defcommand sensei (search)
  ((:string "Suche in Sensei nach: "))
  "Dient zur Suche bei Sensei per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://senseis.xmp.net/?search=%s&nrchk=1" search)))

(defcommand sonja (search)
  ((:string "Suche in Sonja nach: "))
  "Dient zur Suche bei Sonja per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://kisa.ca/vortaro/search.php?someaction=search&word=" search)))

(defcommand stackoverflow (search)
  ((:string "Suche in Stackoverflow nach: "))
  "Dient zur Suche bei Stackoverflow per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://stackoverflow.com/search?q=" search)))

(defcommand wikipedia (search)
  ((:string "Suche in der Wikipedia nach: "))
  "Dient zur Suche in der Wikipedia per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://de.wikipedia.org/wiki/" search)))

(defcommand open-selection-browser () ()
  "Öffnet die markierte Webadresse per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (run-shell-command (cat "exec conkeror " (get-x-selection))))

(defun cat (&rest strings)
  "Kürzel für (concatenate 'zeichenkette foo bar)."
  (apply 'concatenate 'string strings))

;; Erzeuge Gruppen    
;;----------------

(run-commands
      "grename Standard" 
      "gnewbg WWW"
      "gnewbg Arbeiten"
      "gnewbg Media"
      "gnewbg Erholung"
      "gnewbg System"
;      "gnewbg Fliessend"
      )

;; Clear rules
(clear-window-placement-rules)

(define-frame-preference "Standard"
;  (0 t   t :instance "xterm")
;  (0 t   t :class "UXTerm")
;  (0 t   t :class "st-256color")
  )

(define-frame-preference "WWW"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :class "Claws-mail")  
  (0 t   t :class "Conkeror")
  (0 t   t :class "Deluge")
  (0 t   t :class "Firefox")
  (0 t   t :class "surf")
  (0 t   t :class "Turpial")
  (0 t   t :class "Uzbl-core")
  (0 t   t :class "Xchat")
  )

(define-frame-preference "Arbeiten"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :title "emacs")
  (0 t   t :class "Gvim")
  (0 t   t :class "Focuswriter")
  (0 t   t :class "libreoffice-startcenter")
  (0 t   t :class "libreoffice-writer")
  (0 t   t :class "libreoffice-calc")
  (0 t   t :class "libreoffice-impress")
  (0 t   t :class "libreoffice-draw")
  (0 t   t :class "libreoffice-math")
  (0 t   t :class "Okular")
  (0 t   t :class "Pyroom")
  (0 t   t :class "Zathura")
  )

(define-frame-preference "Media"
  ;; frame raise lock (lock AND raise == jumpto)
;  (0 t   t :instance "aumix")
;  (0 t   t :class "Audacious")
;  (0 t   t :class "Geeqie")
;  (0 t   t :class "MPlayer")
  (0 t   t :class "Avidemux")
;  (0 t   t :class "Kaffeine")
;  (0 t   t :class "Vlc")
  (0 t   t :class "Minitube")
;  (0 t   t :class "Ristretto")
  (0 t   t :class "K3b")
  (0 t   t :class "Iscan")
  (0 t   t :class "tvbrowser-TVBrowser")
  )

(define-frame-preference "Erholung"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :class "Angband")
  (0 t   t :class "ASCIIpOrtal")
  (0 t   t :class "Desmume-glade")
  (0 t   t :class "Desmume")
  (0 t   t :class "Dwarf_Fortress")
  (0 t   t :class "Dwarftherapist")
  (0 t   t :class "flands-FLApp")
  (0 t   t :class "flare.bin")
  (0 t   t :class "Gvbam")
  (0 t   t :class "net-minecraft-MinecraftLauncher")
  (0 t   t :class "russotto-zplet-ZJApp")
  (0 t   t :class "Palapelli")
  (0 t   t :class "Scid")
  (0 t   t :title "SuperTuxKart")
  (0 t   t :title "t-engine")
  (0 t   t :title "tome")
  (0 t   t :class "warmux")
  (0 t   t :class "wesnoth")
  (0 t   t :class "widelands")
  )

(define-frame-preference "System"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :class "Keepassx")
  (0 t   t :class "Gpg-crypter")
  (0 t   t :class "Nitrogen")
  (0 t   t :class "Thunar")
  (0 t   t :class "Unison-gtk2")
  (0 t   t :class "Xarchiver")
  )

;; Übersicht zu Zusatztasten
;; M-s = ALT+SUPER
;; s- = SUPER
;; S- = SHIFT
;; C- = Control/STRG
;; H- = ALT-GR

;; Programme über den stumpwm-like Escape-Modus starten
(define-key *root-map* (kbd "M-s-a") "exec uxterm -e alsamixer ")
(define-key *root-map* (kbd "M-s-A") "exec uxterm -e abook ")
(define-key *root-map* (kbd "M-s-c") "conkeror")
(define-key *root-map* (kbd "M-s-C") "claws-mail")
(define-key *root-map* (kbd "M-s-d") "deluge")
(define-key *root-map* (kbd "M-s-e") "emacs")
(define-key *root-map* (kbd "M-s-f") "focuswriter")
(define-key *root-map* (kbd "M-s-g") "geekie")
(define-key *root-map* (kbd "M-s-G") "gimp")
(define-key *root-map* (kbd "M-s-k") "keepassx")
(define-key *root-map* (kbd "M-s-K") "kaffeine")
(define-key *root-map* (kbd "M-s-m") "minitube")
(define-key *root-map* (kbd "M-s-M") "exec java -jar minecraft.jar ")
(define-key *root-map* (kbd "M-s-n") "nitrogen")
(define-key *root-map* (kbd "M-s-o") "okular")
(define-key *root-map* (kbd "M-s-p") "exec dmenu_run ")
(define-key *root-map* (kbd "M-s-P") "palapeli")
(define-key *root-map* (kbd "M-s-r") "ristretto")
(define-key *root-map* (kbd "M-s-s") "exec surf ")
(define-key *root-map* (kbd "M-s-S") "scid")
(define-key *root-map* (kbd "M-s-t") "exec thunar ")
(define-key *root-map* (kbd "M-s-T") "turpial")
(define-key *root-map* (kbd "M-s-u") "unison-gtk2")
(define-key *root-map* (kbd "M-s-v") "vlc")
(define-key *root-map* (kbd "M-s-w") "exec uxterm -e wicd-curses ")
(define-key *root-map* (kbd "M-s-x") "xchat")
(define-key *root-map* (kbd "M-s-X") "xarchiver")
(define-key *root-map* (kbd "M-s-y") "exec synclient touchpadoff=1 ")
(define-key *root-map* (kbd "M-s-Y") "exec synclient touchpadoff=0 ")
(define-key *root-map* (kbd "M-s-z") "zathura")

;; Zusätzliche Optionen über den StumpWM-like Escape-Modus
(define-key *root-map* (kbd "DEL") "repack-window-numbers")
(define-key *root-map* (kbd "I") "show-window-properties")
(define-key *root-map* (kbd "P") "exec dmenu_run ")
(define-key *root-map* (kbd ",") "switch-modeline")

;; Redefinieren von Standardtastenkombinationen
(define-key *root-map* (kbd "c") "exec uxterm -fg lightblue -bg darkblue")
(define-key *root-map* (kbd "C-c") "exec st")

;; Neuere Tasten

;;; Fenster - Verhalten dwm-like
(define-key *top-map* (kbd "s-Left") "move-focus-warp left")
(define-key *top-map* (kbd "s-S-Left") "move-window left")

(define-key *top-map* (kbd "s-Right") "move-focus-warp right")
(define-key *top-map* (kbd "s-S-Right") "move-window right")

(define-key *top-map* (kbd "s-Up") "move-focus-warp up")
(define-key *top-map* (kbd "s-S-Up") "move-window up")

(define-key *top-map* (kbd "s-Down") "move-focus-warp down")
(define-key *top-map* (kbd "s-S-Down") "move-window down")

(define-key *top-map* (kbd "C-s-Left") "pull-hidden-previous")
(define-key *top-map* (kbd "C-s-Right") "pull-hidden-next")
(define-key *top-map* (kbd "C-s-Up") "mark")
(define-key *top-map* (kbd "C-s-Down") "pull-marked")

;; Durch Fenster wechseln - dwm-like
(define-key *top-map* (kbd "s-Tab") "next-in-frame")
(define-key *top-map* (kbd "s-ISO_Left_Tab") "prev-in-frame")     ;; this is Shift Tab

;; Gruppen - Verhalten ist dwm-like

(define-key *top-map* (kbd "M-s-Left") "gprev")
(define-key *top-map* (kbd "M-s-Right") "gnext")
(define-key *top-map* (kbd "M-S-s-Left") "gprev-with-window")
(define-key *top-map* (kbd "M-S-s-Right") "gnext-with-window")

(define-key *top-map* (kbd "s-SPC") "other")
(define-key *top-map* (kbd "S-s-SPC") "windowlist")
(define-key *top-map* (kbd "M-s-SPC") "gother")     ;; Go to last group
(define-key *top-map* (kbd "M-S-s-SPC") "grouplist")
(define-key *top-map* (kbd "C-s-SPC") "pull-hidden-other")
(define-key *top-map* (kbd "C-S-s-SPC") "pull-marked")
(define-key *top-map* (kbd "Pause") "gother")
(define-key *top-map* (kbd "C-Pause") "grouplist")

(define-key *top-map* (kbd "s-1") "gselect 1")
(define-key *top-map* (kbd "s-2") "gselect 2")
(define-key *top-map* (kbd "s-3") "gselect 3")
(define-key *top-map* (kbd "s-4") "gselect 4")
(define-key *top-map* (kbd "s-5") "gselect 5")
(define-key *top-map* (kbd "s-6") "gselect 6")
(define-key *top-map* (kbd "s-7") "gselect 7")
(define-key *top-map* (kbd "s-8") "gselect 8")
(define-key *top-map* (kbd "s-9") "gselect 9")
(define-key *top-map* (kbd "s-0") "gselect 0")

(define-key *top-map* (kbd "M-s-1") "gmove 1")
(define-key *top-map* (kbd "M-s-2") "gmove 2")
(define-key *top-map* (kbd "M-s-3") "gmove 3")
(define-key *top-map* (kbd "M-s-4") "gmove 4")
(define-key *top-map* (kbd "M-s-5") "gmove 5")
(define-key *top-map* (kbd "M-s-6") "gmove 6")
(define-key *top-map* (kbd "M-s-7") "gmove 7")
(define-key *top-map* (kbd "M-s-8") "gmove 8")
(define-key *top-map* (kbd "M-s-9") "gmove 9")
(define-key *top-map* (kbd "M-s-0") "gmove 0")

;; Terminal + StumpWM-Funktionen als dwm-like
(define-key *top-map* (kbd"s-RET") "exec uxterm -fg lightblue -bg darkblue -e 'tcsh' ")
(define-key *top-map* (kbd "S-s-RET") "fullscreen")
(define-key *top-map* (kbd "s-;") "colon")
(define-key *top-map* (kbd "s-:") "eval")
(define-key *top-map* (kbd "s-!") "exec")
(define-key *top-map* (kbd "s-#") "mark")
;(define-key *top-map* (kbd "s-?") *root-map*)
(define-key *top-map* (kbd "s--") "fclear")
(define-key *top-map* (kbd "s-+") "balance-frames")
(define-key *top-map* (kbd "s-\"") "select")
(define-key *top-map* (kbd "s-'") "windowlist")
(define-key *top-map* (kbd "s-,") "switch-modeline")


(define-key *top-map* (kbd "s-a") "time")
(define-key *top-map* (kbd "s-A") "title")
(define-key *top-map* (kbd "s-b") "banish")
(define-key *top-map* (kbd "s-c") "exec uxterm -fg lightblue -bg darkblue -e 'tcsh'")
(define-key *top-map* (kbd "s-e") "emacs")
(define-key *top-map* (kbd "s-f") "fselect")
(define-key *top-map* (kbd "s-F") "curframe")
(define-key *top-map* (kbd "s-g") *groups-map*)
(define-key *top-map* (kbd "s-G") "vgroups")
(define-key *top-map* (kbd "s-h") *help-map*)
(define-key *top-map* (kbd "s-i") "info")
(define-key *top-map* (kbd "s-I") "show-window-properties")
(define-key *top-map* (kbd "s-k") "delete")
(define-key *top-map* (kbd "s-K") "kill")
(define-key *top-map* (kbd "s-l") "exec xflock4")
(define-key *top-map* (kbd "s-L") "loadrc")
(define-key *top-map* (kbd "s-m") "lastmsg")
(define-key *top-map* (kbd "s-n") "pull-hidden-next")
(define-key *top-map* (kbd "M-s-N") "next")
(define-key *top-map* (kbd "C-s-n") "next-in-frame")
(define-key *top-map* (kbd "C-s-N") "number")
(define-key *top-map* (kbd "s-o") "fnext")
(define-key *top-map* (kbd "s-p") "pull-hidden-previous")
(define-key *top-map* (kbd "s-P") "prev")
(define-key *top-map* (kbd "C-s-p") "prev-in-frame")
(define-key *top-map* (kbd "s-Q") "only")
(define-key *top-map* (kbd "s-r") "iresize")
(define-key *top-map* (kbd "s-R") "remove")
(define-key *top-map* (kbd "s-s") "vsplit")
(define-key *top-map* (kbd "s-S") "hsplit")
(define-key *top-map* (kbd "s-t") "send-escape")
(define-key *top-map* (kbd "s-u") "next-urgent")
(define-key *top-map* (kbd "s-v") "version")
(define-key *top-map* (kbd "s-w") "windows")
(define-key *top-map* (kbd "s-W") "place-existing-windows")

;; Direkte Funktionstasten zum Programmstart - dwm-like
(define-key *top-map* (kbd "Print") "exec scrot ")
(define-key *top-map* (kbd "XF86HomePage") "conkeror")
(define-key *top-map* (kbd "XF86Mail") "claws-mail")
(define-key *top-map* (kbd "XF86Calculator") "speedcrunch")

(define-key *top-map* (kbd "M-s-a") "exec uxterm -e alsamixer ")
(define-key *top-map* (kbd "M-s-A") "exec uxterm -e abook ")
(define-key *top-map* (kbd "M-s-c") "conkeror")
(define-key *top-map* (kbd "M-s-C") "claws-mail")
(define-key *top-map* (kbd "M-s-d") "deluge")
(define-key *top-map* (kbd "M-s-e") "emacs")
(define-key *top-map* (kbd "M-s-f") "focuswriter")
(define-key *top-map* (kbd "M-s-g") "geeqie")
(define-key *top-map* (kbd "M-s-G") "gimp")
(define-key *top-map* (kbd "M-s-k") "keepassx")
(define-key *top-map* (kbd "M-s-K") "kaffeine")
(define-key *top-map* (kbd "M-s-m") "minitube")
(define-key *top-map* (kbd "M-s-M") "exec java -jar minecraft.jar ")
(define-key *top-map* (kbd "M-s-n") "nitrogen")
(define-key *top-map* (kbd "M-s-o") "okular")
(define-key *top-map* (kbd "M-s-p") "exec dmenu_run ")
(define-key *top-map* (kbd "M-s-P") "palapeli")
(define-key *top-map* (kbd "M-s-r") "ristretto")
(define-key *top-map* (kbd "M-s-s") "exec surf ")
(define-key *top-map* (kbd "M-s-S") "scid")
(define-key *top-map* (kbd "M-s-t") "exec thunar ")
(define-key *top-map* (kbd "M-s-T") "turpial")
(define-key *top-map* (kbd "M-s-u") "unison-gtk2")
(define-key *top-map* (kbd "M-s-v") "vlc")
(define-key *top-map* (kbd "M-s-w") "exec uxterm -e wicd-curses ")
(define-key *top-map* (kbd "M-s-x") "xchat")
(define-key *top-map* (kbd "M-s-X") "xarchiver")
(define-key *top-map* (kbd "M-s-y") "exec synclient touchpadoff=1 ")
(define-key *top-map* (kbd "M-s-Y") "exec synclient touchpadoff=0 ")
(define-key *top-map* (kbd "M-s-z") "zathura")

;; Websuchen
(define-key *top-map* (kbd "C-s-b") "news-bbc")
(define-key *top-map* (kbd "C-s-d") "duckduckgo")
(define-key *top-map* (kbd "C-s-D") "dwarffortress")
(define-key *top-map* (kbd "C-s-g") "google")
(define-key *top-map* (kbd "C-s-G") "news-guardian")
(define-key *top-map* (kbd "C-s-h") "hackernews")
(define-key *top-map* (kbd "C-s-i") "imdb")
(define-key *top-map* (kbd "C-s-I") "ixquick")
(define-key *top-map* (kbd "C-s-l") "leo")
(define-key *top-map* (kbd "C-s-m") "memory-alpha")
(define-key *top-map* (kbd "C-s-M") "minecraft")
(define-key *top-map* (kbd "C-s-n") "nachrichten")
(define-key *top-map* (kbd "C-s-o") "open-selection-browser")
(define-key *top-map* (kbd "C-S-O") "sonja")
(define-key *top-map* (kbd "C-s-r") "revo")
(define-key *top-map* (kbd "C-s-R") "news-register")
(define-key *top-map* (kbd "C-s-s") "sensei")
(define-key *top-map* (kbd "C-s-S") "stackoverflow")
(define-key *top-map* (kbd "C-s-w") "wikipedia")

;; Ein Auswahl-Menü wie es von StumpWM zum Beispiel für Gruppen oder die Hilfe geboten werden.
;; Die Struktur ist abgestimmt mit den Gruppen
(defparameter *start-menü*
  '(

    ("WWW"
     ("Chromium"             "chromium")
     ("Claws-Mail   M-s-C"   "claws-mail")
     ("Conkeror     M-s-c"   "conkeror")
     ("Deluge       M-s-d"   "deluge") 
     ("MiniTube     M-s-m"   "minitube")
     ("Mutt"                 "st -e mutt")
     ("Surf         M-s-s"   "surf")
     ("Turpial      M-s-T"   "turpial")
     ("X-Chat       M-s-x"   "xchat")
    )

    ("Arbeiten"
     ("Emacs                    s-e"     "emacs")
     ("FocusWriter              M-s-f"   "focuswriter")
     ("GIMP                     M-s-G"   "gimp")
     ("gVim"                             "gvim")
     ("LibreOffice-Startcenter"          "libreoffice-startcenter")
     ("LibreOffice-Writer"               "libreoffice-writer")
     ("LibreOffice-Calc"                 "libreoffice-calc")
     ("LibreOffice-Impress"              "libreoffice-impress")
     ("LibreOffice-Draw"                 "libreoffice-draw")
     ("LibreOffice-Math"                 "libreoffice-math")
     ("Mathomatic"                       "uxterm -e mathomatic")
     ("Okular                   M-s-o"   "okular")
     ("PyRoom"                           "pyroom")
     ("Scanner"                          "iscan")
     ("Zathura                  M-s-z"   "zathura")
    )
    
    ("Media"
     ("Audacious"                "audacious")
     ("AviDeMux"                 "avidemux2_qt4")
     ("Geeqie           M-s-g"   "geeqie")
     ("K3b Burner"               "k3b")
     ("Kaffeine         M-s-K"   "kaffeine")
     ("Lautstärke       M-s-a"   "uxterm -e alsamixer")
     ("MiniTube         M-s-m"   "minitube")
     ("Ristretto        M-s-r"   "ristretto")
     ("TV-Browser"               "tvbrowser")
     ("VideoLan-Client  M-s-v"   "vlc")
     ("XVidCap Screencast"       "xvidcap")
    )
   
    ("Erholung"
     ("Adventure 770"                 "adv770")
     ("ASCII-Portal"                  "asciiportal")
     ("Battle for Wesnoth"            "wesnoth --smallgui")
     ("Crawl"                         "uxterm -e crawl")
     ("Desmume"                       "desmume-glade")
     ("Dwarffortress"                 "dwarffortress-ih")
     ("DwarfTherapist"                "dwarftherapist")
     ("Fabled Lands App"              "flands")
     ("Flare RPG"                     "flare")
     ("Hitchhikers Guide"             "hitchhikersguide")
     ("Minecraft             M-s-M"   "java -jar minecraft.jar")
     ("MiniTube"                      "minitube")
     ("Moria"                         "uxterm -e moria")
     ("Multiplayer-Angband"           "mangband")
     ("Palapelli"                     "palapelli")
     ("Rogue"                         "uxterm -e rogue")
     ("Scid vs. PC           M-s-S"   "scid")
     ("STella"                        "stella")
     ("Supertux-Kart"                 "supertuxkart")
     ("T.O.M.E. 2"                    "tome")
     ("T.O.M.E. 4"                    "tome4")
     ("VisualBoy Advanced m"          "gvbam")
     ("Warmux"                        "warmux")
     ("Widelands"                     "widelands")
     ("World of Padman"               "wop")
     ("XorCurses"                     "uxterm -e xorcurses")
     ("Zork 1"                        "uxterm -e zork1")
     ("Zork 2"                        "uxterm -e zork2")
     ("Zork 3"                        "uxterm -e zork3")
     ("ZSNES"                         "zsnes")
    )
    
    ("System"
     ("Adressbuch          M-s-A"   "uxterm -e abook")
     ("Dateimanager        M-s-T"   "thunar")
     ("Event-Anzeiger XEV"          "xev")
     ("GParted"                     "gksudo gparted")
     ("GPG-Crypter"                 "gpg-crypter")
     ("Htop"                        "uxterm -e htop")
     ("KeePassX            M-s-k"   "keepassx")
     ("Lautstärke          M-s-a"   "uxterm -e alsamixer")
     ("Midnight Commander"          "uxterm -e mc")
     ("Netzwerk            M-s-w"   "uxterm -e wicd-curses")
     ("Nitrogen            M-s-n"   "nitrogen")
     ("StumpWM reinitialisieren"    "reinit")
     ("Taschenrechner"              "speedcrunch")
     ("Touchpad AUS        M-s-y"   "synclient touchpadoff=1")
     ("Touchpad EIN        M-s-Y"   "synclient touchpadoff=0")
     ("UnetBootin"                  "gksudo unetbootin")
     ("Unison              M-s-u"   "unison-gtk2")
     ("XArchiver           M-s-X"   "xarchiver")
     ("XFontSel"                    "xfontsel")
    )

    ("Webseiten"
     ("Arch Linux"                       "conkeror http://archlinux.org")
     ("BBC Nachrichten      C-s-b"       "conkeror http://bbc.co.uk/news")
     ("Diaspora*"                        "conkeror http://joindiaspora.com/stream")
     ("DuckDuckGo           C-s-d"       "conkeror https://duckduckgo.com")
     ("Dwarf Fortress Wiki  C-s-D"       "conkeror http://df.magmawiki.com")
     ("FreshPorts"                       "conkeror http://freshports.org")
     ("Google               C-s-g"       "conkeror http://google.com")
     ("Google News          C-s-n"       "conkeror http://news.google.com")
     ("Google Translate"                 "conkeror http://translate.google.com")
     ("Gronkh"                           "conkeror http://gronkh.de")
     ("Hackernews           C-s-h"       "conkeror http://news.ycombinator.com")
     ("Heise"                            "conkeror http://heise.de")
     ("i2p"                              "conkeror http://127.0.0.1:7657")
     ("I.M.D.B.             C-s-i"       "conkeror http://imdb.com")
     ("IxQuick              C-s-I"       "conkeror http://ixquick.com")
     ("LEO EN-DE            C-s-l"       "conkeror http://leo.org")
     ("Lernu Esperanto"                  "conkeror http://lernu.net")
     ("Memory Alpha         C-s-m"       "conkeror http://memory-alpha.org")
     ("Minecraft Wiki       C-s-M"       "conkeror http://www.minecraftwiki.net")
     ("Nachrichten          C-s-n"       "conkeror http://news.google.de")
     ("Revo Vortaro EO      C-s-r"       "conkeror http://reta-vortaro.de")
     ("Sensei               C-s-s"       "conkeror http://seinseis.xmp.net")
     ("Sonja Vortaro EO     C-s-O"       "conkeror http://kisa.ca/vortaro")
     ("Stackoverflow        C-s-S"       "conkeror http://stackoverflow.com")
     ("StumpWM Homepage"                 "conkeror http://www.nongnu.org/stumpwm/")
     ("StumpWM Wiki"                     "conkeror http://stumpwm.svkt.org/cgi-bin/wiki.pl")
     ("Telecomix"                        "conkeror https://status.telecomix.org")
     ("Thalia"                           "conkeror http://thalia.de")
     ("The Guardian         C-s-G"       "conkeror http://guardian.co.uk")
     ("The Register         C-s-R"       "conkeror http://theregister.co.uk")
     ("TOR check"                        "conkeror https://check.torproject.org")
     ("Tumblr"                           "conkeror http://tumblr.com/dashboard")
     ("Twitter"                          "conkeror https://twitter.com")
     ("Übersetzen"                       "conkeror http://translate.google.com")
     ("Wikipedia            C-s-w"       "conkeror http://de.wikipedia.org")
     ("YouTube"                          "conkeror http://youtube.com")     
    )
))

(defcommand menü () ()
  "menü dient der Abarbeitung der Optionen, die als Menüstruktur-Liste in *start-menü* hinterlegt sind."
  (labels ((pick (options)
                 (let ((selection (stumpwm::select-from-menu
                                   (current-screen) options "")))
                   (cond
                    ((null selection)
                     (throw 'stumpwm::error "Abbruch."))
                    ((stringp (second selection))
                     (second selection))
                    (t
                     (pick (cdr selection)))))))
    (let ((choice (pick *start-menü*)))
      (run-shell-command choice))))

;; Die Tastenanbindung für das Menü
(define-key *root-map* (kbd ".") "menü")
(define-key *top-map* (kbd "s-.") "menü")

;; Vorbereitungen für das Modeline-Verhalten
(setf *mode-line-background-color*      "darkblue"
      *mode-line-foreground-color*      "lightblue"
      *mode-line-border-color*          "lightblue"
      *mode-line-timeout*               1
      *mode-line-position*              :top
      *time-format-string-default*      "%a %d.%m.%Y %I:%M%p"
      *time-modeline-string*            "%a %d.%m.%Y %I:%M%p"
      *group-format*                    "%n%s%t"
      *window-format*                   "«%n%s%m%10c»")

;; Modeline zeigt Zeit in lokalem Format, CPU-Nutzung, Netzwerk-Verkehr, Gruppe und aktuellen Rahmen
(setf *screen-mode-line-format*
      (list '(:eval (run-shell-command "date '+%c '|tr -d [:cntrl:] && uptime | sed 's/.*: //; s/,//g'|tr -d [:cntrl:]" t))   " %t %c %M %l [^B%n^b] %W"))

;; Sometimes using the mouse is useful too
(setf *mouse-focus-policy* :click)

;; Erst mal weg mit dem nervenden Cursor
(banish-pointer)

;; Start SWANK
(require 'swank)
(swank:create-server :dont-close t)
;; Aufruf mittels M-x slime-connect in Emacs

;-*-lisp-*-
; mit loadrc im colon neu laden
(in-package :stumpwm)

(load "devel/git/stumpwm/contrib/sbclfix")
(load "devel/git/stumpwm/contrib/net")
(load "devel/git/stumpwm/contrib/cpu")
(load "devel/git/stumpwm/contrib/mem")



;; Statt C-t, ist doch die wirklich unbenützte Menütaste einfach nur am geilsten!?
(set-prefix-key (kbd "Menu"))
;;; Verworfene Lösungen
;(run-shell-command "xmodmap -e 'clear Mod4'" t)
;(run-shell-command "xmodmap -e 'keycode 133 = F20'" t)
;(set-prefix-key (kbd "F20"))
;(run-shell-command "xmodmap -e 'keycode 135 = Hyper_L'" t)
;(run-shell-command "xmodmap -e 'clear mod5'" t)
;(run-shell-command "xmodmap -e 'add mod5 = Hyper_L'" t)
;(set-prefix-key (kbd "C-y"))
;(set-prefix-key (kbd "C-<"))
;(set-prefix-key (kbd "F20"))
;(set-prefix-key (kbd "Super_L"))

;; Zeichensatz - der Standardfont:
;;(set-font "-*-terminus-*-*-*-*-*-*-*-*-*-*-*-*")
(set-font "-*-profont-*-*-*-*-12-*-*-*-*-*-*-*")

;; Farben
(set-focus-color      "lightblue")
(set-unfocus-color    "black")
(set-win-bg-color     "darkblue")
(set-fg-color         "lightblue")
(set-bg-color         "darkblue")

;; ============
;; Neue Befehle
;; ============

(defcommand geeqie () ()
  "Starte/wechsle zum Geekie Bildbetrachter."
  (run-or-raise "geeqie" '(:class "Geeqie")))

(defcommand claws-mail () ()
  "Starte/wechsle zu Claws-Mail."
  (run-or-raise "claws-mail" '(:class "Claws-mail")))

(defcommand chromium () ()
  "Starte/wechsle zum Chromium Webbrowser."
  (run-or-raise "chromium" '(:class "Chromium")))	    

(defcommand conkeror () ()
  "Starte/wechsle zum Conkeror Webbrowser."
  (run-or-raise "conkeror" '(:class "Conkeror")))

(defcommand deluge () ()
  "Starte/wechsle zu Deluge."
  (run-or-raise "deluge" '(:class "Deluge")))

(defcommand dwb () ()
  "Starte/wechsle zum dwb Webbrowser."
  (run-or-raise "dwb" '(:class "dwb")))	    

(defcommand emacs () ()
  "Starte/wechsle zu Emacs."
  (run-or-raise "emacs" '(:class "Emacs")))

(defcommand flare () ()
  "Starte/wechsle zu Flare RPG."
  (run-or-raise "flare" '(:class "flare.bin(defcommand emacs () ()
  "Starte/wechsle zu Emacs."
  (run-or-raise "emacs" '(:class "Emacs")))")))

(defcommand firefox () ()
  "Starte/wechsle zu Firefox."
  (run-or-raise "firefox" '(:class "Firefox")))

(defcommand focuswriter () ()
  "Starte/wechsle zu Focuswriter."
  (run-or-raise "focuswriter" '(:class "Focuswriter")))

(defcommand gvim () ()
  "Starte/wechsle zu gVim."
  (run-or-raise "gvim" '(:class "Gvim")))

(defcommand gimp () ()
  "Starte/wechsle zu GIMP."
  (run-or-raise "gimp" '(:class "Gimp")))

(defcommand jumanji () ()
  "Starte/wechsle zum Jumanji Webbrowser."
  (run-or-raise "jumanji" '(:class "Jumanji")))	    

(defcommand kaffeine () ()
  "Starte/wechsle zu Kaffeine."
  (run-or-raise "kaffeine" '(:class "Kaffeine")))

(defcommand keepassx () ()
  "Starte/wechsle zu KeePassX."
  (run-or-raise "keepassx" '(:class "Keepassx")))

(defcommand man (man) ((:string "Manual: "))
	    "Sucht nach einem Befehl in den Manual-Seiten"
	    (run-shell-command (format nil "~A -e sh -c 'man ~A'" terminal man)))

(defcommand mcomix () ()
  "Starte/wechsle zu MComix."
  (run-or-raise "mcomix" '(:class "Mcomix")))

(defcommand minitube () ()
  "Starte/wechsle zu Minitube."
  (run-or-raise "minitube" '(:class "Minitube")))

(defcommand nitrogen () ()
  "Starte/wechsle zu Nitrogen."
  (run-or-raise "nitrogen" '(:class "Nitrogen")))

(defcommand okular () ()
  "Starte/wechsle zum Okular PDF-Betrachter."
  (run-or-raise "okular" '(:class "Okular")))

(defcommand palapeli () ()
  "Starte/wechsle zu Palapeli."
  (run-or-raise "palapeli" '(:class "Palapeli")))

(defcommand reinit () ()
  "Reinitialisierung des Systems"
  (run-commands "reload" "loadrc"))

(defcommand ristretto () ()
  "Starte/wechsle zu Ristretto."
  (run-or-raise "ristretto" '(:class "Ristretto")))

(defcommand scid () ()
  "Starte/wechsle zu Scid vs. PC."
  (run-or-raise "scid" '(:class "Scid")))

(defcommand surf () ()
  "Starte/wechsle zu Surf."
  (run-or-raise "surf" '(:class "surf")))

(defcommand switch-modeline () ()
  "Schaltet die Modeline ein oder aus"
  (toggle-mode-line (current-screen) (current-head)))

(defcommand turpial () ()
  "Starte/wechsle zu Turpial."
  (run-or-raise "turpial" '(:class "Turpial")))

(defcommand uzbl-browser () ()
  "Starte/wechsle zu Uzbl."
  (run-or-raise "uzbl-browser" '(:class "Uzbl-core")))

(defcommand unison-gtk2 () ()
  "Starte/wechsle zu Unison."
  (run-or-raise "unison-gtk2" '(:class "Unison-gtk2")))

(defcommand vlc () ()
  "Starte/wechsle zu VideoLanClient."
  (run-or-raise "vlc" '(:class "Vlc")))

(defcommand xchat () ()
  "Starte/wechsle zu X-Chat."
  (run-or-raise "xchat" '(:class "Xchat")))

(defcommand zathura () ()
  "Starte/wechsle zu Zathura."
  (run-or-raise "zathura" '(:class "Zathura")))

;; Bewege den Focus und anschließend die Maus in das Fenster
(defcommand move-focus-warp (dir) ((:direction "Direction:"))
(move-focus-and-or-window dir)
(banish-pointer :window))

;; Such- und Auswahl-Befehle
;; -------------------------

(defcommand duckduckgo (search)
  ((:string "Suche in DuckDuckGo nach: "))
  "Dient zur Suche bei DuckDuckGo per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://duckduckgo.com/?q=" search)))

(defcommand google (search)
  ((:string "Suche in Google nach: "))
  "Dient zur Suche bei Google per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.google.de/search?q=" search)))

(defcommand hackernews (search)
  ((:string "Suche bei Hackernews nach: "))
  "Dient zur Suche bei Hackernews per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.google.com/search?q=site:news.ycombinator.com+" search)))

(defcommand ixquick (search)
  ((:string "Suche in IxQuick nach: "))
  "Dient zur Suche bei IxQuick per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://ixquick.com/do/metasearch.pl?query=" search)))

(defcommand nachrichten (search)
  ((:string "Suche in Google News nach: "))
  "Dient zur Suche bei Google News per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://news.google.com/news/search?q=" search)))

(defcommand news-bbc (search)
  ((:string "Suche bei BBC News nach: "))
  "Dient zur Suche bei BBC News per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.bbc.co.uk/search/news/?q=" search)))

(defcommand news-guardian (search)
  ((:string "Suche bei Guardian News nach: "))
  "Dient zur Suche bei Guardian News per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://www.guardian.co.uk/search?q=" search)))

(defcommand news-register (search)
  ((:string "Suche bei The Register nach: "))
  "Dient zur Suche bei The Register per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://search.theregister.co.uk/?q=" search)))

(defcommand stackoverflow (search)
  ((:string "Suche in Stackoverflow nach: "))
  "Dient zur Suche bei Stackoverflow per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://stackoverflow.com/search?q=" search)))

(defcommand wikipedia (search)
  ((:string "Suche in der Wikipedia nach: "))
  "Dient zur Suche in der Wikipedia per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "exec conkeror http://de.wikipedia.org/wiki/" search)))

(defcommand open-selection-browser () ()
  "Öffnet die markierte Webadresse per Conkeror. Ist dieser bereits geöffnet, so in einem neuen Tab."
  (run-shell-command (cat "exec conkeror " (get-x-selection))))

; cat statt concat
(defun cat (&rest strings)
  "Kürzel für (concatenate 'zeichenkette foo bar)."
  (apply 'concatenate 'string strings))

;; ===============
;; Ein paar Makros
;; ===============

(defmacro tastenbindung (keymap taste befehl)
  "Kurzes Macro, um eine Tastenbindung zu definieren"
  `(define-key, keymap (kbd, taste), befehl))

(defmacro tastaturbelegung (keymap &rest tasten)
  "Kurzes Macro, um mehrere Tastenbindungen an eine Keymap zu definieren, verwendet pro Taste die Funktion tastenbindung"
  (let ((ks (mapcar (lambda (k)
		      (append (list 'tastenbindung keymap) k))
		    tasten)))
    `(progn ,@ks)))

;; Erzeuge Gruppen    
;;----------------
;; Ohne Gruppen geht es schneller, daher werden sie mal testweise für 7 Tage deaktiviert (reine Theorie)

;(run-commands
;      "grename Standard"
;      "gnewbg Emacs"
;      "gnewbg WWW"
;      "gnewbg Arbeiten"
;      "gnewbg Media"
;      "gnewbg Erholung"
;      "gnewbg System"
;      )

;; Clear rules
(clear-window-placement-rules)

;(define-frame-preference "Standard"
;  (0 t   t :instance "xterm")
;  (0 t   t :class "UXTerm")
;  (0 t   t :class "st-256color")
;  (0 t   t :class "URxvt")
;  )

;(define-frame-preference "Emacs"
;  (0 t   t :title "emacs")
;  )

;(define-frame-preference "WWW"
;  ;; frame raise lock (lock AND raise == jumpto)
;  (0 t   t :class "Claws-mail")  
;  (0 t   t :class "Conkeror")
;  (0 t   t :class "Deluge")
;  (0 t   t :class "Firefox")
;  (0 t   t :class "surf")
;  (0 t   t :class "Turpial")
;  (0 t   t :class "Uzbl-core")
;  (0 t   t :class "Xchat")
;  )

;(define-frame-preference "Arbeiten"
;  ;; frame raise lock (lock AND raise == jumpto)
;  (0 t   t :class "Gvim")
;  (0 t   t :class "Focuswriter")
;  (0 t   t :class "libreoffice-startcenter")
;  (0 t   t :class "libreoffice-writer")
;  (0 t   t :class "libreoffice-calc")
;  (0 t   t :class "libreoffice-impress")
;  (0 t   t :class "libreoffice-draw")
;  (0 t   t :class "libreoffice-math")
;  (0 t   t :class "Okular")
;  (0 t   t :class "Pyroom")
;  (0 t   t :class "Zathura")
;  )

;(define-frame-preference "Media"
;  ;; frame raise lock (lock AND raise == jumpto)
;  (0 t   t :instance "aumix")
;  (0 t   t :class "Audacious")
;  (0 t   t :class "Avidemux")  
;  (0 t   t :class "Geeqie")
;  (0 t   t :class "Gimp")
;  (0 t   t :class "Iscan")
;  (0 t   t :class "K3b")
;  (0 t   t :class "Kaffeine")
;  (0 t   t :class "Mcomix")
;  (0 t   t :class "Minitube")  
;  (0 t   t :class "MPlayer")  
;  (0 t   t :class "Ristretto") 
;  (0 t   t :class "tvbrowser-TVBrowser")
;  (0 t   t :class "Vlc")
;  )

;(define-frame-preference "Erholung"
;  ;; frame raise lock (lock AND raise == jumpto)
;  (0 t   t :class "Angband")
;  (0 t   t :class "ASCIIpOrtal")
;  (0 t   t :class "Desmume-glade")
;  (0 t   t :class "Desmume")
;  (0 t   t :class "Dwarf_Fortress")
;  (0 t   t :class "Dwarftherapist")
;  (0 t   t :class "flands-FLApp")
;  (0 t   t :class "flare.bin")
;  (0 t   t :class "Gvbam")
;  (0 t   t :class "net-minecraft-MinecraftLauncher")
;  (0 t   t :class "russotto-zplet-ZJApp")
;  (0 t   t :class "Palapelli")
;  (0 t   t :class "Scid")
;  (0 t   t :title "SuperTuxKart")
;  (0 t   t :title "t-engine")
;  (0 t   t :title "tome")
;  (0 t   t :class "warmux")
;  (0 t   t :class "wesnoth")
;  (0 t   t :class "widelands")
;  )

;(define-frame-preference "System"
; ;; frame raise lock (lock AND raise == jumpto)
;  (0 t   t :class "Keepassx")
;  (0 t   t :class "Gpg-crypter")
;  (0 t   t :class "Nitrogen")
;  (0 t   t :class "Thunar")
;  (0 t   t :class "Unison-gtk2")
;  (0 t   t :class "Xarchiver")
;  )

;; ======================================
;; Neuere Tasten - nach eigenem Gutdünken
;; ======================================

;; Übersicht zu Zusatztasten
;; M-s = ALT+SUPER
;; s- = SUPER
;; S- = SHIFT
;; C- = Control/STRG
;; H- = ALT-GR

;; *******************************************************
;; Zusätzliche Optionen über den StumpWM-like Escape-Modus
;; *******************************************************

(tastaturbelegung *root-map*
		  ("RET" "exec uxterm -fg lightblue -bg darkblue -e 'tcsh'")
		  ("S-RET" "fullscreen")
		  ("DEL" "repack-window-numbers")
		  ("I" "show-window-properties")
		  ("P" "exec dmenu_run ")
		  ("," "switch-modeline")
		  ("c" "exec uxterm -fg lightblue -bg darkblue -e 'tcsh'")
		  ("C-c" "exec st")
		  ;; Die fehlenden Features auch in der root-map anlegen
		  ("C-SPC" "other")
		  ("M-SPC" "gother")
		  ("S-SPC" "pull-marked")
		  ("Pause" "windowlist")
		  ("C-Pause" "grouplist")
		  )

;; **************************************************************************************
;; Zusätzliche Optionen für einen Direktmodus, wie ihn viele andere Fenstermanager bieten
;; **************************************************************************************

(tastaturbelegung *top-map*
		  ;;; Fenster-Verhalten dwm-like
		  ("s-Left" "move-focus-warp left")
		  ("s-S-Left" "move-window left")
		  ("s-Right" "move-focus-warp right")
		  ("s-S-Right" "move-window right")
		  ("s-Up" "move-focus-warp up")
		  ("s-S-Up" "move-window up")
		  ("s-Down" "move-focus-warp down")
		  ("s-S-Down" "move-window down")
		  ("C-s-Left" "pull-hidden-previous")
		  ("C-s-Right" "pull-hidden-next")
		  ("C-s-Up" "mark")
		  ("C-s-Down" "pull-marked")
		  ;; Durch Fenster wechseln - dwm-like
		  ("s-Tab" "next-in-frame")
		  ("s-ISO_Left_Tab" "prev-in-frame")     ;; Erinnerung: Das ist  Shift-Tab
		  ;; Gruppen-Verhalten ist dwm-like
		  ("M-s-Left" "gprev")
		  ("M-s-Right" "gnext")
		  ("M-S-s-Left" "gprev-with-window")
		  ("M-S-s-Right" "gnext-with-window")
		  ("s-SPC" "pull-hidden-next")
		  ("C-s-SPC" "other")
		  ("M-s-SPC" "gother")
		  ("S-s-SPC" "pull-marked")
		  ("Pause" "windowlist")
		  ("C-Pause" "grouplist")
		  ;; Nachbildung der vordefinierten StumpWM-Tasten als Direkttasten
		  ("s-RET" "exec uxterm -fg lightblue -bg darkblue -e 'tcsh'")
		  ("S-s-RET" "fullscreen")
		  ("s-;" "colon")
		  ("s-:" "eval")
		  ("s-!" "exec")
		  ("s-#" "mark")
		  ("s--" "fclear")
		  ("s-+" "balance-frames")
		  ("s-\"" "select")
		  ("s-'" "windowlist")
		  ("s-," "switch-modeline")
		  ("s-a" "time")
		  ("s-A" "title")
		  ("s-b" "banish")
		  ("s-c" "exec uxterm -fg lightblue -bg darkblue -e 'tcsh'")
		  ("s-C" "commands")
		  ("s-e" "emacs")
		  ("s-f" "fselect")
		  ("s-F" "curframe")
		  ("s-g" *groups-map*)
		  ("s-G" "vgroups")
		  ("s-h" *help-map*)
		  ("s-i" "info")
		  ("s-I" "show-window-properties")
		  ("s-k" "delete")
		  ("s-K" "kill")
		  ("s-l" "exec xflock4")
		  ("s-L" "loadrc")
		  ("s-m" "lastmsg")
		  ("s-n" "pull-hidden-next")
		  ("M-s-N" "next")
		  ("C-s-n" "next-in-frame")
		  ("C-s-N" "number")
		  ("s-o" "fnext")
		  ("s-p" "pull-hidden-previous")
		  ("s-P" "prev")
		  ("C-s-p" "prev-in-frame")
		  ("s-Q" "only")
		  ("s-r" "iresize")
		  ("s-R" "remove")
		  ("s-s" "vsplit")
		  ("s-S" "hsplit")
		  ("s-t" "send-escape")
		  ("s-u" "next-urgent")
		  ("s-v" "version")
		  ("s-w" "windows")
		  ("s-W" "place-existing-windows")
		  ;; Wechseln zu einem anderen Fenster
		  ("s-1" "select-window-by-number 1")
		  ("s-2" "select-window-by-number 2")
		  ("s-3" "select-window-by-number 3")
		  ("s-4" "select-window-by-number 4")
		  ("s-5" "select-window-by-number 5")
		  ("s-6" "select-window-by-number 6")
		  ("s-7" "select-window-by-number 7")
		  ("s-8" "select-window-by-number 8")
		  ("s-9" "select-window-by-number 9")
		  ("s-0" "select-window-by-number 0")
		  ;; Wechseln zu einer anderen Gruppe
		  ("M-s-1" "gselect 1")
		  ("M-s-2" "gselect 2")
		  ("M-s-3" "gselect 3")
		  ("M-s-4" "gselect 4")
		  ("M-s-5" "gselect 5")
		  ("M-s-6" "gselect 6")
		  ("M-s-7" "gselect 7")
		  ("M-s-8" "gselect 8")
		  ("M-s-9" "gselect 9")
		  ("M-s-0" "gselect 0")
		  ;; Verschieben in eine andere Gruppe
		  ("M-S-s-1" "gmove 1")
		  ("M-S-s-2" "gmove 2")
		  ("M-S-s-3" "gmove 3")
		  ("M-S-s-4" "gmove 4")
		  ("M-S-s-5" "gmove 5")
		  ("M-S-s-6" "gmove 6")
		  ("M-S-s-7" "gmove 7")
		  ("M-S-s-8" "gmove 8")
		  ("M-S-s-9" "gmove 9")
		  ("M-S-s-0" "gmove 0")
		  ;; Programme starten
		  ("Print" "exec scrot -e 'mv $f ~/Bilder/Bildschirmfotos/ 2>/dev/null'")
		  ("XF86HomePage" "conkeror")
		  ("XF86Mail" "claws-mail")
		  ("XF86Calculator" "speedcrunch")
		  ("XF86AudioRaiseVolume" "exec amixer set Master 5%+ unmute")
		  ("XF86AudioLowerVolume" "exec amixer set Master 5%- unmute")
		  ("XF86AudioMute" "exec amixer set Master toggle")
		  ("M-s-a" "exec uxterm -e alsamixer ")
		  ("M-s-A" "exec uxterm -e abook ")
		  ("M-s-c" "conkeror")
		  ("M-s-C" "claws-mail")
		  ("M-s-d" "deluge")
		  ("M-s-D" "dwb")
		  ("M-s-e" "emacs")
		  ("M-s-f" "focuswriter")
		  ("M-s-g" "geeqie")
		  ("M-s-G" "gimp")
		  ("M-s-j" "jumanji")
		  ("M-s-k" "keepassx")
		  ("M-s-K" "kaffeine")
		  ("M-s-m" "exec uxterm -e mc")
		  ("M-s-M" "minitube")
		  ("M-s-n" "nitrogen")
		  ("M-s-o" "okular")
		  ("M-s-p" "exec dmenu_run ")
		  ("M-s-r" "ristretto")
		  ("M-s-s" "exec surf ")
		  ("M-s-t" "exec thunar ")
		  ("M-s-T" "turpial")
		  ("M-s-u" "unison-gtk2")
		  ("M-s-v" "vlc")
		  ("M-s-w" "exec uxterm -e wicd-curses ")
		  ("M-s-x" "xchat")
		  ("M-s-X" "xarchiver")
		  ("M-s-y" "exec synclient touchpadoff=1 ")
		  ("M-s-Y" "exec synclient touchpadoff=0 ")
		  ("M-s-z" "zathura")
		  ;; Websuchen
		  ("C-s-b" "news-bbc")
		  ("C-s-d" "duckduckgo")
		  ("C-s-g" "google")
		  ("C-s-G" "news-guardian")
		  ("C-s-h" "hackernews")
		  ("C-s-i" "ixquick")
		  ("C-s-n" "nachrichten")
		  ("C-s-o" "open-selection-browser") ;; öffnet den markierten Link im Webbrowser
		  ("C-s-r" "news-register")
		  ("C-s-s" "stackoverflow")
		  ("C-s-w" "wikipedia")
		  )

;; ***********************************
;; Fehlende Features in der groups-map
;; ***********************************

(tastaturbelegung *groups-map*
		  ("C" "gnew-float")
		  )

;; ===========================================
;; Ein neues Menü für Programme (stumpwm-like)
;; ===========================================

(defvar *programmstart-map*
  (let ((m (make-sparse-keymap)))
    (define-key m (kbd "a") "exec uxterm -e alsamixer ")
    (define-key m (kbd "A") "exec uxterm -e abook ")
    (define-key m (kbd "c") "conkeror")
    (define-key m (kbd "C") "claws-mail")
    (define-key m (kbd "d") "deluge")
    (define-key m (kbd "D") "dwb")
    (define-key m (kbd "e") "emacs")
    (define-key m (kbd "f") "focuswriter")
    (define-key m (kbd "g") "geeqie")
    (define-key m (kbd "G") "gimp")
    (define-key m (kbd "j") "jumanji")
    (define-key m (kbd "k") "keepassx")
    (define-key m (kbd "K") "kaffeine")
    (define-key m (kbd "m") "exec uxterm -e mc")
    (define-key m (kbd "M") "minitube")
    (define-key m (kbd "n") "nitrogen")
    (define-key m (kbd "o") "okular")
    (define-key m (kbd "p") "exec dmenu_run ")
    (define-key m (kbd "r") "ristretto")
    (define-key m (kbd "s") "exec surf ")
    (define-key m (kbd "t") "exec thunar ")
    (define-key m (kbd "T") "turpial")
    (define-key m (kbd "u") "unison-gtk2")
    (define-key m (kbd "v") "vlc")
    (define-key m (kbd "w") "exec uxterm -e wicd-curses ")
    (define-key m (kbd "x") "xchat")
    (define-key m (kbd "X") "xarchiver")
    (define-key m (kbd "y") "exec synclient touchpadoff=1 ")
    (define-key m (kbd "Y") "exec synclient touchpadoff=0 ")
    (define-key m (kbd "z") "zathura")
    m))

;; ===========================================
;; Ein neues Menü für Websuchen (stumpwm-like)
;; ===========================================

(defvar *websuche-map*
  (let ((m (make-sparse-keymap)))
    (define-key m (kbd "b") "news-bbc")
    (define-key m (kbd "d") "duckduckgo")
    (define-key m (kbd "g") "google")
    (define-key m (kbd "G") "news-guardian")
    (define-key m (kbd "h") "hackernews")
    (define-key m (kbd "i") "ixquick")
    (define-key m (kbd "n") "nachrichten")
    (define-key m (kbd "o") "open-selection-browser")
    (define-key m (kbd "r") "news-register")
    (define-key m (kbd "s") "stackoverflow")
    (define-key m (kbd "w") "wikipedia")
    m))

;; ===========================================
;; Ein neues Menü zur Erholung (stumpwm-like)
;; ===========================================

(defvar *erholung-map*
  (let ((m (make-sparse-keymap)))
     (define-key m (kbd "a") "exec adv770")
     (define-key m (kbd "A") "exec asciiportal")
     (define-key m (kbd "b") "exec wesnoth --smallgui")
     (define-key m (kbd "c") "exec uxterm -e crawl")
     (define-key m (kbd "d") "exec desmume-glade")
     (define-key m (kbd "D") "exec dwarffortress-ih")
     (define-key m (kbd "C-d") "exec dwarftherapist")
     (define-key m (kbd "f") "exec flands")
     (define-key m (kbd "F") "exec flare")
     (define-key m (kbd "C-f") "exec freedroidRPG")
     (define-key m (kbd "h") "exec hitchhikersguide")
     (define-key m (kbd "l") "exec scummvm")
     (define-key m (kbd "m") "exec java -jar minecraft.jar")
     (define-key m (kbd "M") "exec uxterm -e moria")
     (define-key m (kbd "C-m") "exec mangband")
     (define-key m (kbd "p") "exec palapelli")
     (define-key m (kbd "r") "exec uxterm -e rogue")
     (define-key m (kbd "s") "exec scid")
     (define-key m (kbd "S") "exec stella")
     (define-key m (kbd "C-s") "exec supertuxkart")
     (define-key m (kbd "t") "exec tome")
     (define-key m (kbd "T") "exec tome4")
     (define-key m (kbd "v") "exec gvbam")
     (define-key m (kbd "w") "exec warmux")
     (define-key m (kbd "W") "exec widelands")
     (define-key m (kbd "C-w") "exec wop")
     (define-key m (kbd "x") "exec uxterm -e xorcurses")
     (define-key m (kbd "X") "exec xskat")
     (define-key m (kbd "z") "exec zsnes")
     (define-key m (kbd "1") "exec uxterm -e zork1")
     (define-key m (kbd "2") "exec uxterm -e zork2")
     (define-key m (kbd "3") "exec uxterm -e zork3")
     m))

;; ==========================
;; Ein Ersatz *help-map* Menü
;; ==========================

(setf *help-map*
          (let ((m (make-sparse-keymap)))
	    (define-key m (kbd "m") "man")
	    (define-key m (kbd "c") "describe-command")
	    (define-key m (kbd "f") "describe-function")
	    (define-key m (kbd "k") "describe-key")
            (define-key m (kbd "v") "describe-variable")
	    (define-key m (kbd "w") "where-is")
            m))

;; ===========================================
;; Ein grafisches Auswahl-Menü
;; -------------------------------------------
;; Die Struktur ist abgestimmt mit den Gruppen
;; ===========================================

(defparameter *start-menü*
  '(

    ("WWW"
     ("Chromium"             "chromium")
     ("Claws-Mail   M-s-C"   "claws-mail")
     ("Conkeror     M-s-c"   "conkeror")
     ("Deluge       M-s-d"   "deluge")
     ("dwb          M-s-D"   "dwb")
     ("Jumanji      M-s-j"   "jumanji")
     ("MiniTube     M-s-m"   "minitube")
     ("Mutt"                 "st -e mutt")
     ("Surf         M-s-s"   "surf")
     ("Turpial      M-s-T"   "turpial")
     ("X-Chat       M-s-x"   "xchat")
    )

    ("Arbeiten"
     ("Emacs                    s-e"     "emacs")
     ("FocusWriter              M-s-f"   "focuswriter")
     ("GIMP                     M-s-G"   "gimp")
     ("gVim"                             "gvim")
     ("LibreOffice-Startcenter"          "libreoffice-startcenter")
     ("LibreOffice-Writer"               "libreoffice-writer")
     ("LibreOffice-Calc"                 "libreoffice-calc")
     ("LibreOffice-Impress"              "libreoffice-impress")
     ("LibreOffice-Draw"                 "libreoffice-draw")
     ("LibreOffice-Math"                 "libreoffice-math")
     ("Mathomatic"                       "uxterm -e mathomatic")
     ("Okular                   M-s-o"   "okular")
     ("PyRoom"                           "pyroom")
     ("Scanner"                          "iscan")
     ("Zathura                  M-s-z"   "zathura")
    )
    
    ("Media"
     ("Audacious"                "audacious")
     ("AviDeMux"                 "avidemux2_qt4")
     ("Geeqie           M-s-g"   "geeqie")
     ("K3b Burner"               "k3b")
     ("Kaffeine         M-s-K"   "kaffeine")
     ("Lautstärke       M-s-a"   "uxterm -e alsamixer")
     ("MComix"                   "mcomix")
     ("MiniTube         M-s-m"   "minitube")
     ("Music on Console"         "uxterm -e mocp")
     ("Ristretto        M-s-r"   "ristretto")
     ("TV-Browser"               "tvbrowser")
     ("VideoLan-Client  M-s-v"   "vlc")
     ("XVidCap Screencast"       "xvidcap")
    )
   
    ("Erholung"
     ("Adventure 770"                 "adv770")
     ("ASCII-Portal"                  "asciiportal")
     ("Battle for Wesnoth"            "wesnoth --smallgui")
     ("Crawl"                         "uxterm -e crawl")
     ("Desmume"                       "desmume-glade")
     ("Dwarffortress"                 "dwarffortress-ih")
     ("DwarfTherapist"                "dwarftherapist")
     ("Fabled Lands App"              "flands")
     ("Flare RPG"                     "flare")
     ("Freedroid-RPG"                 "freedroidRPG")
     ("Hitchhikers Guide"             "hitchhikersguide")
     ("Minecraft"                     "java -jar minecraft.jar")
     ("MiniTube"                      "minitube")
     ("Moria"                         "uxterm -e moria")
     ("Multiplayer-Angband"           "mangband")
     ("Palapelli"                     "palapelli")
     ("Rogue"                         "uxterm -e rogue")
     ("Scid vs. PC"                   "scid")
     ("S.C.U.M.M.-VM"                 "scummvm")
     ("STella"                        "stella")
     ("Supertux-Kart"                 "supertuxkart")
     ("T.O.M.E. 2"                    "tome")
     ("T.O.M.E. 4"                    "tome4")
     ("VisualBoy Advanced m"          "gvbam")
     ("Warmux"                        "warmux")
     ("Widelands"                     "widelands")
     ("World of Padman"               "wop")
     ("XorCurses"                     "uxterm -e xorcurses")
     ("X-Skat"                        "exec xskat")
     ("Zork 1"                        "uxterm -e zork1")
     ("Zork 2"                        "uxterm -e zork2")
     ("Zork 3"                        "uxterm -e zork3")
     ("ZSNES"                         "zsnes")
    )
    
    ("System"
     ("Adressbuch          M-s-A"   "uxterm -e abook")
     ("Dateimanager        M-s-T"   "thunar")
     ("Dropbox starten"             "dropbox start")
     ("Dropbox beenden"             "dropbox stop")
     ("Event-Anzeiger XEV"          "xev")
     ("GParted"                     "gksudo gparted")
     ("GPG-Crypter"                 "gpg-crypter")
     ("Htop"                        "uxterm -e htop")
     ("i2p starten"                 "~/i2p/i2prouter start")
     ("i2p beenden"                 "~/i2p/i2prouter stop")
     ("KeePassX            M-s-k"   "keepassx")
     ("Lautstärke          M-s-a"   "uxterm -e alsamixer")
     ("Midnight Commander"          "uxterm -e mc")
     ("Netzwerk            M-s-w"   "uxterm -e wicd-curses")
     ("Nitrogen            M-s-n"   "nitrogen")
     ("StumpWM reinitialisieren"    "reinit")
     ("Taschenrechner"              "speedcrunch")
     ("Touchpad AUS        M-s-y"   "synclient touchpadoff=1")
     ("Touchpad EIN        M-s-Y"   "synclient touchpadoff=0")
     ("UnetBootin"                  "gksudo unetbootin")
     ("Unison              M-s-u"   "unison-gtk2")
     ("XArchiver           M-s-X"   "xarchiver")
     ("XFontSel"                    "xfontsel")
    )

    ("Webseiten"
     ("Arch Linux"                       "conkeror http://archlinux.org")
     ("BBC Nachrichten      C-s-b"       "conkeror http://bbc.co.uk/news")
     ("Blottr Breaking-News"             "conkeror http://blottr.com")
     ("Detektiv Conan"                   "conkeror http://detektiv-conan.ch")
     ("Diaspora*"                        "conkeror http://joindiaspora.com/stream")
     ("DuckDuckGo           C-s-d"       "conkeror https://duckduckgo.com")
     ("Dwarf Fortress Wiki"              "conkeror http://df.magmawiki.com")
     ("FreshPorts"                       "conkeror http://freshports.org")
     ("Google               C-s-g"       "conkeror http://google.com")
     ("Google News          C-s-n"       "conkeror http://news.google.com")
     ("Google Translate"                 "conkeror http://translate.google.com")
     ("Gronkh"                           "conkeror http://gronkh.de")
     ("Hackernews           C-s-h"       "conkeror http://news.ycombinator.com")
     ("Heise"                            "conkeror http://heise.de")
     ("i2p"                              "conkeror http://127.0.0.1:7657")
     ("I.M.D.B."                         "conkeror http://imdb.com")
     ("IxQuick              C-s-i"       "conkeror http://ixquick.com")
     ("LEO EN-DE"                        "conkeror http://leo.org")
     ("Lernu Esperanto"                  "conkeror http://lernu.net")
     ("L1sp"                             "conkeror http://l1sp.org")
     ("Memory Alpha"                     "conkeror http://memory-alpha.org")
     ("Minecraft Wiki"                   "conkeror http://www.minecraftwiki.net")
     ("Nachrichten          C-s-n"       "conkeror http://news.google.de")
     ("Planet LISP"                      "conkeror http://planet.lisp.org")
     ("Planet SBCL"                      "conkeror http://planet.sbcl.org")
     ("Revo Vortaro EO"                  "conkeror http://reta-vortaro.de")
     ("Sonja Vortaro EO"                 "conkeror http://kisa.ca/vortaro")
     ("Stackoverflow        C-s-s"       "conkeror http://stackoverflow.com")
     ("StumpWM Homepage"                 "conkeror http://www.nongnu.org/stumpwm/")
     ("StumpWM Wiki"                     "conkeror http://stumpwm.svkt.org/cgi-bin/wiki.pl")
     ("SubCentral"                       "conkeror http://subcentral.de")
     ("Telecomix"                        "conkeror https://status.telecomix.org")
     ("Thalia"                           "conkeror http://thalia.de")
     ("The Guardian         C-s-G"       "conkeror http://guardian.co.uk")
     ("The Register         C-s-r"       "conkeror http://theregister.co.uk")
     ("TOR check"                        "conkeror https://check.torproject.org")
     ("Tumblr"                           "conkeror http://tumblr.com/dashboard")
     ("Twitter"                          "conkeror https://twitter.com")
     ("Übersetzen"                       "conkeror http://translate.google.com")
     ("Wikipedia            C-s-w"       "conkeror http://de.wikipedia.org")
     ("YouTube"                          "conkeror http://youtube.com")
     ("ZenCast"                          "conkeror http://zencast.org")
    )
))

(defcommand menü () ()
  "menü dient der Abarbeitung der Optionen, die als Menüstruktur-Liste in *start-menü* hinterlegt sind."
  (labels ((pick (options)
                 (let ((selection (stumpwm::select-from-menu
                                   (current-screen) options "")))
                   (cond
                    ((null selection)
                     (throw 'stumpwm::error "Abbruch."))
                    ((stringp (second selection))
                     (second selection))
                    (t
                     (pick (cdr selection)))))))
    (let ((choice (pick *start-menü*)))
      (run-shell-command choice))))

;; =================================
;; Die Tastenanbindung für die Menüs
;; =================================

(tastaturbelegung *root-map*
		  ("x" '*programmstart-map*)
		  ("y" '*websuche-map*)
		  ("X" '*erholung-map*)
		  ("." "menü")
		  )

(tastaturbelegung *top-map*
		  ("s-x" '*programmstart-map*)
		  ("s-y" '*websuche-map*)
		  ("s-X" '*erholung-map*)
		  ("s-." "menü")
		  )

;; =======================
;; Die angepasste Modeline
;; =======================

;; Vorbereitungen für das Modeline-Verhalten
(setf *mode-line-background-color*      "darkblue"
      *mode-line-foreground-color*      "lightblue"
      *mode-line-border-color*          "lightblue"
      *mode-line-timeout*               1
      *mode-line-position*              :top
      *time-format-string-default*      "%a %d.%m.%Y %I:%M%p"
      *time-modeline-string*            "%a %d.%m.%Y %I:%M%p"
      *group-format*                    "%n%s%t"
      *window-format*                   "«%n%s%m%10c»")

;; Modeline zeigt Zeit in lokalem Format, CPU-Nutzung, Netzwerk-Verkehr, Gruppe, Notifikation und aktuellen Rahmen
(setf *screen-mode-line-format*
      (list '(:eval (run-shell-command "date '+%c '|tr -d [:cntrl:] && uptime | sed 's/.*: //; s/,//g'|tr -d [:cntrl:]" t))   " %t %c %M %l [^B%n^b] %W"))

;; =============================
;; Das Verhalten des Mauszeigers
;; =============================

(setf *mouse-focus-policy* :click)

;; =====================================
;; Erst mal weg mit dem nervenden Cursor
;; =====================================
(banish-pointer)

;; =========================================
;; für aktive Programmierzyklen - SWANK
;; -----------------------------------------
;; Aufruf mittels M-x slime-connect in Emacs
;; =========================================
; (require 'swank)
; (swank:create-server :dont-close t)

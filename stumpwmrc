;-*-lisp-*-
; mit loadrc im colon neu laden
(in-package :stumpwm)

;;; Verworfene Lösungen
;(run-shell-command "xmodmap -e 'clear Mod4'" t)
;(run-shell-command "xmodmap -e 'keycode 133 = F20'" t)
;(set-prefix-key (kbd "F20"))
;(run-shell-command "xmodmap -e 'keycode 135 = Hyper_L'" t)
;(run-shell-command "xmodmap -e 'clear mod5'" t)
;(run-shell-command "xmodmap -e 'add mod5 = Hyper_L'" t)
;(set-prefix-key (kbd "C-y"))
;(set-prefix-key (kbd "C-<"))
;(set-prefix-key (kbd "F20"))
;(set-prefix-key (kbd "Super_L"))

;; Statt C-t, ist doch die wirklich unbenützte Menütaste einfach nur am geilsten!?
(set-prefix-key (kbd "Menu"))

(defcommand claws-mail () ()
  "Starte/wechsle zu Claws-Mail."
  (run-or-raise "claws-mail" '(:class "Claws-mail")))

(defcommand deluge () ()
  "Starte/wechsle zu Deluge."
  (run-or-raise "deluge" '(:class "Deluge")))

(defcommand emacs () ()
  "Starte/wechsle zu Emacs."
  (run-or-raise "emacs" '(:class "Emacs")))

(defcommand firefox () ()
  "Starte/wechsle zu Firefox."
  (run-or-raise "firefox" '(:class "Firefox")))

(defcommand gvim () ()
  "Starte/wechsle zu gVim."
  (run-or-raise "gvim" '(:class "Gvim")))

(defcommand gimp () ()
  "Starte/wechsle zu GIMP."
  (run-or-raise "gimp" '(:class "Gimp")))

(defcommand kaffeine () ()
  "Starte/wechsle zu Kaffeine."
  (run-or-raise "kaffeine" '(:class "Kaffeine")))

(defcommand keepassx () ()
  "Starte/wechsle zu KeePassX."
  (run-or-raise "keepassx" '(:class "Keepassx")))

(defcommand nitrogen () ()
  "Starte/wechsle zu Nitrogen."
  (run-or-raise "nitrogen" '(:class "Nitrogen")))

(defcommand okular () ()
  "Starte/wechsle zum Okular PDF-Betrachter."
  (run-or-raise "okular" '(:class "Okular")))

(defcommand palapeli () ()
  "Starte/wechsle zu Palapeli."
  (run-or-raise "palapeli" '(:class "Palapeli")))

(defcommand ristretto () ()
  "Starte/wechsle zu Ristretto."
  (run-or-raise "ristretto" '(:class "Ristretto")))

(defcommand scid () ()
  "Starte/wechsle zu Scid vs. PC."
  (run-or-raise "scid" '(:class "Scid")))

(defcommand surf () ()
  "Starte/wechsle zu Surf."
  (run-or-raise "surf" '(:class "surf")))

(defcommand turpial () ()
  "Starte/wechsle zu Turpial."
  (run-or-raise "turpial" '(:class "Turpial")))

(defcommand uzbl-browser () ()
  "Starte/wechsle zu Uzbl."
  (run-or-raise "uzbl-browser" '(:class "Uzbl-core")))

(defcommand unison-gtk2 () ()
  "Starte/wechsle zu Unison."
  (run-or-raise "unison-gtk2" '(:class "Unison-gtk2")))

(defcommand vlc () ()
  "Starte/wechsle zu VideoLanClient."
  (run-or-raise "vlc" '(:class "Vlc")))

(defcommand xchat () ()
  "Starte/wechsle zu X-Chat."
  (run-or-raise "xchat" '(:class "Xchat")))



;; Bewege den Focus und anschließend die Maus in das Fenster
(defcommand move-focus-warp (dir) ((:direction "Direction:"))
(move-focus-and-or-window dir)
(banish-pointer :window))

;; Erzeuge Gruppen    
(run-commands
      "grename Standard" 
      "gnewbg WWW"
      "gnewbg Emacs"
      "gnewbg Media"
      "gnewbg Arbeiten"
      "gnewbg Erholung"
      "gnewbg Sieben"
      "gnewbg Acht"
      "gnewbg Neun"
      )

;; Clear rules
(clear-window-placement-rules)

(define-frame-preference "WWW"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :class "Claws-mail")
  (0 t   t :class "Deluge")
  (0 t   t :class "Firefox")
  (0 t   t :class "surf")
  (0 t   t :class "Turpial")
  (0 t   t :class "Unison-gtk2")
  (0 t   t :class "Uzbl-core")
  (0 t   t :class "Xchat")
  )

(define-frame-preference "Emacs"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :title "emacs")
  (0 t   t :class "Gvim")
  )

(define-frame-preference "Media"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :instance "aumix")
  (0 t   t :class "MPlayer")
  (0 t   t :class "Avidemux")
  (0 t   t :class "Kaffeine")
  (0 t   t :class "Vlc")
  )

(define-frame-preference "Arbeiten"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :class "okular")
  (0 t   t :class "libreoffice-startcenter")
  (0 t   t :class "libreoffice-writer")
  (0 t   t :class "libreoffice-calc")
  (0 t   t :class "libreoffice-impress")
  (0 t   t :class "libreoffice-draw")
  (0 t   t :class "libreoffice-math")
  )

(define-frame-preference "Erholung"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :class "Scid")
  )

;; Übersicht zu Zusatztasten
;; M-s = ALT+SUPER
;; s- = SUPER
;; S- = SHIFT
;; C- = Control/STRG
;; H- = ALT-GR

;; Programme über den stumpwm-like Escape-Modus starten
(define-key *root-map* (kbd "M-a") "exec uxterm -e abook ")
(define-key *root-map* (kbd "M-c") "claws-mail")
(define-key *root-map* (kbd "M-d") "deluge")
(define-key *root-map* (kbd "M-e") "emacs")
(define-key *root-map* (kbd "M-f") "firefox")
(define-key *root-map* (kbd "M-g") "gvim")

(define-key *root-map* (kbd "M-k") "keepassx")
(define-key *root-map* (kbd "M-m") "exec uxterm -e mc ")
(define-key *root-map* (kbd "M-n") "nitrogen")
(define-key *root-map* (kbd "M-o") "okular")
(define-key *root-map* (kbd "P") "exec dmenu_run ")
(define-key *root-map* (kbd "M-s") "exec surf ")
(define-key *root-map* (kbd "M-t") "exec thunar ")
(define-key *root-map* (kbd "M-T") "turpial")
(define-key *root-map* (kbd "M-u") "exec uzbl-browser ")
(define-key *root-map* (kbd "M-v") "vlc")
(define-key *root-map* (kbd "M-w") "exec uxterm -e wicd-curses ")
(define-key *root-map* (kbd "M-x") "xchat")
(define-key *root-map* (kbd "M-z") "exec zathura ")

(define-key *root-map* (kbd "DEL") "repack-window-numbers")
(define-key *root-map* (kbd "I") "show-window-properties")

;; Neuere Tasten

;;; Fenster - Verhalten dwm-like
(define-key *top-map* (kbd "s-Left") "move-focus-warp left")
(define-key *top-map* (kbd "s-S-Left") "move-window left")

(define-key *top-map* (kbd "s-Right") "move-focus-warp right")
(define-key *top-map* (kbd "s-S-Right") "move-window right")

(define-key *top-map* (kbd "s-Up") "move-focus-warp up")
(define-key *top-map* (kbd "s-S-Up") "move-window up")

(define-key *top-map* (kbd "s-Down") "move-focus-warp down")
(define-key *top-map* (kbd "s-S-Down") "move-window down")

 ;; Durch Fenster wechseln - dwm-like
(define-key *top-map* (kbd "s-Tab") "next-in-frame")
(define-key *top-map* (kbd "s-ISO_Left_Tab") "prev-in-frame")     ;; this is Shift Tab

;; Gruppen - Verhalten ist dwm-like

(define-key *top-map* (kbd "M-s-Left") "gprev")
(define-key *top-map* (kbd "M-s-Right") "gnext")
(define-key *top-map* (kbd "M-S-s-Left") "gprev-with-window")
(define-key *top-map* (kbd "M-S-s-Right") "gnext-with-window")

(define-key *top-map* (kbd "s-SPC") "other")
(define-key *top-map* (kbd "M-s-SPC") "gother")     ;; Go to last group
(define-key *top-map* (kbd "Pause") "gother")
(define-key *top-map* (kbd "C-Pause") "grouplist")

(define-key *top-map* (kbd "s-1") "gselect 1")
(define-key *top-map* (kbd "s-2") "gselect 2")
(define-key *top-map* (kbd "s-3") "gselect 3")
(define-key *top-map* (kbd "s-4") "gselect 4")
(define-key *top-map* (kbd "s-5") "gselect 5")
(define-key *top-map* (kbd "s-6") "gselect 6")
(define-key *top-map* (kbd "s-7") "gselect 7")
(define-key *top-map* (kbd "s-8") "gselect 8")
(define-key *top-map* (kbd "s-9") "gselect 9")
(define-key *top-map* (kbd "s-0") "gselect 0")

(define-key *top-map* (kbd "M-s-1") "gmove 1")
(define-key *top-map* (kbd "M-s-2") "gmove 2")
(define-key *top-map* (kbd "M-s-3") "gmove 3")
(define-key *top-map* (kbd "M-s-4") "gmove 4")
(define-key *top-map* (kbd "M-s-5") "gmove 5")
(define-key *top-map* (kbd "M-s-6") "gmove 6")
(define-key *top-map* (kbd "M-s-7") "gmove 7")
(define-key *top-map* (kbd "M-s-8") "gmove 8")
(define-key *top-map* (kbd "M-s-9") "gmove 9")
(define-key *top-map* (kbd "M-s-0") "gmove 0")

;; Terminal + anderes
(define-key *top-map* (kbd"s-RET") "exec uxterm -e 'tcsh' ")
(define-key *top-map* (kbd "S-s-RET") "fullscreen")
(define-key *top-map* (kbd "s-;") "colon")
(define-key *top-map* (kbd "s-:") "eval")
(define-key *top-map* (kbd "s-!") "exec")
(define-key *top-map* (kbd "s-#") "mark")
;(define-key *top-map* (kbd "s-?") *root-map*)
(define-key *top-map* (kbd "s--") "fclear")
(define-key *top-map* (kbd "s-+") "balance-frames")
(define-key *top-map* (kbd "s-\"") "select")
(define-key *top-map* (kbd "s-'") "windowlist")

(define-key *top-map* (kbd "s-a") "time")
(define-key *top-map* (kbd "s-A") "title")
(define-key *top-map* (kbd "s-b") "banish")
(define-key *top-map* (kbd "s-c") "exec uxterm -e 'tcsh'")
(define-key *top-map* (kbd "s-e") "emacs")
(define-key *top-map* (kbd "s-f") "fselect")
(define-key *top-map* (kbd "s-F") "curframe")
(define-key *top-map* (kbd "s-g") *groups-map*)
(define-key *top-map* (kbd "s-G") "vgroups")
(define-key *top-map* (kbd "s-h") *help-map*)
(define-key *top-map* (kbd "s-i") "info")
(define-key *top-map* (kbd "s-I") "show-window-properties")
(define-key *top-map* (kbd "s-k") "delete")
(define-key *top-map* (kbd "s-K") "kill")
(define-key *top-map* (kbd "s-l") "redisplay")
(define-key *top-map* (kbd "s-L") "loadrc")
(define-key *top-map* (kbd "s-m") "lastmsg")
(define-key *top-map* (kbd "s-n") "pull-hidden-next")
(define-key *top-map* (kbd "s-N") "next")
(define-key *top-map* (kbd "C-s-n") "next-in-frame")
(define-key *top-map* (kbd "C-s-N") "number")
(define-key *top-map* (kbd "s-o") "fnext")
(define-key *top-map* (kbd "s-p") "pull-hidden-previous")
(define-key *top-map* (kbd "s-P") "prev")
(define-key *top-map* (kbd "C-s-p") "prev-in-frame")
(define-key *top-map* (kbd "s-Q") "only")
(define-key *top-map* (kbd "s-r") "iresize")
(define-key *top-map* (kbd "s-R") "remove")
(define-key *top-map* (kbd "s-s") "vsplit")
(define-key *top-map* (kbd "s-S") "hsplit")
(define-key *top-map* (kbd "s-t") "send-escape")
(define-key *top-map* (kbd "s-u") "next-urgent")
(define-key *top-map* (kbd "s-v") "version")
(define-key *top-map* (kbd "s-w") "windows")
(define-key *top-map* (kbd "s-W") "place-existing-windows")

;; Direkte Funktionstasten - dwm-like
(define-key *top-map* (kbd "Print") "exec scrot ")
(define-key *top-map* (kbd "XF86HomePage") "firefox")
(define-key *top-map* (kbd "XF86Mail") "claws-mail")

(define-key *top-map* (kbd "M-s-a") "exec uxterm -e alsamixer ")
(define-key *top-map* (kbd "M-s-A") "exec uxterm -e abook ")
(define-key *top-map* (kbd "M-s-c") "claws-mail")
(define-key *top-map* (kbd "M-s-d") "deluge")
(define-key *top-map* (kbd "M-s-e") "emacs")
(define-key *top-map* (kbd "M-s-f") "firefox")
(define-key *top-map* (kbd "M-s-g") "gvim")
(define-key *top-map* (kbd "M-s-G") "gimp")
(define-key *top-map* (kbd "M-s-k") "keepassx")
(define-key *top-map* (kbd "M-s-K") "kaffeine")
(define-key *top-map* (kbd "M-s-m") "exec uxterm -e mc ")
(define-key *top-map* (kbd "M-s-M") "exec java -jar minecraft.jar ")
(define-key *top-map* (kbd "M-s-n") "nitrogen")
(define-key *top-map* (kbd "M-s-o") "okular")
(define-key *top-map* (kbd "M-s-p") "exec dmenu_run ")
(define-key *top-map* (kbd "M-s-P") "palapeli")
(define-key *top-map* (kbd "M-s-r") "ristretto")
(define-key *top-map* (kbd "M-s-s") "exec surf ")
(define-key *top-map* (kbd "M-s-S") "scid")
(define-key *top-map* (kbd "M-s-t") "exec thunar ")
(define-key *top-map* (kbd "M-s-T") "turpial")
(define-key *top-map* (kbd "M-s-u") "uzbl-browser")
(define-key *top-map* (kbd "M-s-U") "unison-gtk2")
(define-key *top-map* (kbd "M-s-v") "vlc")
(define-key *top-map* (kbd "M-s-w") "exec uxterm -e wicd-curses ")
(define-key *top-map* (kbd "M-s-x") "xchat")
(define-key *top-map* (kbd "M-s-z") "exec zathura ")

;; Sometimes using the mouse is useful too
(setf *mouse-focus-policy* :click)

;; Erst mal weg mit dem nervenden Cursor
(banish-pointer)

;; Start SWANK
(require 'swank)
(swank:create-server :dont-close t)
;; Aufruf mittels M-x slime-connect in Emacs
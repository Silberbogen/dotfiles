# conky configuration
#
# The list of variables has been removed from this file in favour
# of keeping the documentation more maintainable.
# Check http://conky.sf.net for an up-to-date-list.
#
# For ideas about how to modify conky, please see:
# http://crunchbanglinux.org/forums/topic/59/my-conky-config/
#
# For help with conky, please see:
# http://crunchbanglinux.org/forums/topic/2047/conky-help/
#
# Enjoy! :)
##############################################
# Settings
##############################################
background yes
use_xft yes
xftfont Liberation Sans:size=9
xftalpha 1
update_interval 1.0
total_run_times 0
own_window yes
own_window_transparent yes
own_window_type desktop
#own_window_argb_visual yes
own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager
double_buffer yes
minimum_size 200 200
maximum_width 310
draw_shades no
draw_outline no
draw_borders no
draw_graph_borders no
default_color 444444 # for white background
#default_color 828282
#default_color b5b5b5 # for dark background
default_shade_color 000000
default_outline_color 828282
alignment top_left
gap_x 12
gap_y 24
no_buffers yes
uppercase no
cpu_avg_samples 2
override_utf8_locale yes
##############################################
#  Output
##############################################
TEXT

${hr}
K E Y W O R D S $alignr G O
${font Liberation Sans:size=8}break $alignr bricht das Schleifenkonstrukt ab
case $alignr neuer Zweig eines switch-/select-Konstrukts
chan $alignr Kommunikationskanal
const $alignr definiert Konstanten
continue $alignr beendet aktuellen Schleifendurchlauf
default $alignr Standardzweig eines switch-/select-Konstrukts
defer $alignr verschiebt den Funktionsaufruf
else $alignr Schleifenkonstrukt, unwahr-/weiterer Zweig
fallthrough $alignr hebt die Beendigung eines case-Zweigs auf
for $alignr ermöglicht Schleifen als Kontrollstruktur
func $alignr definiert Funktionen und Methoden
go $alignr nebenläufiger Funktionsaufruf
goto $alignr lokaler Sprung zu einem Label
if $alignr Schleifenkonstrukt, wahr-Zweig
import $alignr importiert Pakete
interface $alignr definiert Schnittstelle
map $alignr definiert Hash-Tabelle
package $alignr definiert Pakete
range $alignr ermöglicht Iteration über eine Sequenz
return $alignr aus Funktionen/Methoden zurückkehren
select $alignr wählt aus verschiedenen Arten der Kommunikation
struct $alignr definiert abstrakte Datentypen
switch $alignr ermöglicht Verzweigungsbäume
type $alignr benutzerdefinierte Datentypen
var $alignr definiert Variablen
${hr}
${font Liberation Sans:size=9}V A L U E T Y P E S   ( D E F A U L T V A L U E )
${font Liberation Sans:size=8}bool (false)
byte (0) $alignr alias für uint8
complexN (0+0i) $alignr N = 64, 128
error (nil)
floatN (0) $alignr N = 32, 64
(u)int(N) (0) $alignr  N = 8, 16, 32, 64
rune (0) $alignr alias für int32
string ("")
uintptr (0)
${hr}
${font Liberation Sans:size=9}P R E D E C L A R E D   I D E N T I F I E R S
${font Liberation Sans:size=8}true $alignr wahr
false $alignr falsch
iota $alignr beginnt bei 0, erhöht jedesmal um 1
nil $alignr leer
append $alignr slices anhängen/verbinden
cap $alignr Kapazität eines slice/einer map
close $alignr Kanal schliessen
complex $alignr Komplexzahl
copy $alignr slice kopieren
delete $alignr Element aus map löschen
imag $alignr imaginärer Anteil einer Komplexzahl
len $alignr Länge eines type, channel, string, array, slice, map
make $alignr alloziere Speicher für channel, map, slice
new $alignr alloziere Speicher für Valuetypes, structs
panic $alignr löst Fehler aus
real $alignr Realteil einer Komplexzahl
recover $alignr Fehler einfangen
